import Head from 'next/head'
import styles from '@/styles/Home.module.css';
import Header from './component/Header';
import 'bootstrap/dist/css/bootstrap.min.css';
import Carousel from './component/ItemCarousel';
import axios, { AxiosResponse } from "axios";
import CategoryNav from './component/CategoryNav';
import CategoryCards from './component/CategoryCards';
import { useState, useEffect } from 'react';

const url = "https://newsapi.org/v2/top-headlines?country=in&apiKey=4b6387efa9a34250a128e341894ffaca&pageSize=5";


export async function getStaticProps() {
  const result: AxiosResponse<any, any> = await axios.get(url);
  const data: any = result.data;
  return {
    props: {
      data
    }
  }
}

type SnackBarType = {
  open: boolean;
  message: string;
  severity: 'success' | 'error' | 'info' | 'warning';
}



export default function Home({ data }: any) {
  const [activeCategory, setActiveCategory] = useState<number>(0);
  const [categoryData, setCategoryData] = useState<any>([]);
  const [categoryLoading, setCategoryLoading] = useState<boolean>(false);
  const [snackbar, setSnackbar] = useState<SnackBarType>({ open: false, message: '', severity: 'error' });
  const categories: string[] = ['Business', 'Entertainment', 'General', 'Health', 'Science', 'Sports', 'Technology'];
  const getActiveCategoryData = (categoryData: any, activeCategory: number) => {
    const category = categories[activeCategory];
    const categoryDataItem: any = categoryData.find((item: any) => item.category === category);
    return categoryDataItem && categoryDataItem.data;
  }
  const setCategoryDataIfNeeded = (index: number) => {
    const category = categories[index];
    if (categoryData.length >= 0) {
      const categoryDataItem: string = categoryData.find((item: any) => item.category === category);
      if (!categoryDataItem) {
        setCategoryLoading(true);
        axios.get(`/api/category?category=${category}`)
          .then((result: AxiosResponse<any, any>) => {
            const data: any = result.data.data;
            console.log('data', data);
            setCategoryData([...categoryData, { category, data }]);
            setCategoryLoading(false);
          })
          .catch((error: any) => {
            setCategoryLoading(false);
            setSnackbar({ open: true, message: 'Something went wrong', severity: 'error' });
          });
      }
    }
  }

  const onSelect = (selectedKey: string | null) => {
    if (selectedKey) {
      const index = parseInt(selectedKey.split('-')[1]);
      setActiveCategory(index);
      setCategoryDataIfNeeded(index);
    }
  }
  useEffect(() => {
    setCategoryDataIfNeeded(activeCategory);
  }, []);
  return (
    <>
      <Head>
        <title>News Me</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Header />
        <Carousel
          data={data}
        />
        <CategoryNav
          categories={categories}
          activeKey={activeCategory}
          onSelect={onSelect}
        />
        <CategoryCards
          data={getActiveCategoryData(categoryData, activeCategory)}
          category={categories[activeCategory]}
          isLoading={categoryLoading}
        />

      </main>
    </>
  )
}
